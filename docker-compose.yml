version: '3'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: "yutfut"
      POSTGRES_USER: "yutfut"
      POSTGRES_PASSWORD: "yutfut"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - '5432:5432'
    volumes:
      - ./init_db/:/docker-entrypoint-initdb.d/
      - .:/var/lib/postgresql/data/

  adminer:
    image: adminer
    restart: always
    links:
      - "db:db"
    ports:
      - "8090:8080"
    depends_on:
      - db

  backend:
    image: yutfut/back_mppr:${BACK_MPPR_VERSION}
    restart: always
    ports:
      - '8000:8000'
    depends_on:
      - adminer

  nginx:
    image: nginx:latest
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./build:/var/html
      - ./etc/letsencrypt/live/study-ai.online/fullchain.pem:/etc/ssl
      - ./etc/letsencrypt/live/study-ai.online/privkey.pem:/etc/ssl
    depends_on:
      - backend

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    depends_on:
      - nginx

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - '9090:9090'
    depends_on:
      - node-exporter

  grafana:
    image: grafana/grafana-enterprise:latest
    links:
      - "prometheus:prometheus"
    ports:
      - "3000:3000"
    user: '1000'
    volumes:
      - ./gfdata:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=yutfut
      - GF_SECURITY_ADMIN_PASSWORD=yutfut
    depends_on:
      - prometheus